**@author: Mano Joseph MATHEW**
 
**@group: Survival**
 
**@email: mano.mathew@efrei.fr**
 
**Introduction**
The goals for this session are multiple: Use the Jupyter computing environment, that is a widely used tool to develop and share data analysis and data visualization workflows.
 
**Understanding the basic techniques**
- Loading CSV Uber Data file
- Data transformation
- Create Functions
- Use matplotlib, pandas, seaborn
- Use a simple plot for ploting Uber longitute and latitude data
 
**Load the data**
Download the data from https://drive.google.com/open?id=1PUmKJUh3jW5IAud1JjJUotkd5iPCUaLi
 
Use pandas.read_csv to read the csv file
 
**Perform Data transformation**
- Use .map(pandas.to_datetime) for better date transformation
- Creating a function for finding the day of the month example: def get_dom(dt): return dt.day data['dom'] = data['Date/Time'].map(get_dom)
- Creating a function for finding the weekday and hours example: def get_weekday(dt): return dt.weekday() data['weekday']= data['Date/Time'].map(get_weekday)
- Analyse the day of month
 
**Visual representation**
- Use hist for creating histogram with bins = 30, rwidth=0.8, range=(0.5,30.5)
- Label the title as Frequency by DoM - Uber - April 2014, x-axis Date of the month and y-axis Frequency
- Creating a function for Grouping the data by date of month (dom) example: def count_rows(rows): return len(rows)
- Use plot, bar function to plot the data by date
- Sort the data by date and use bar function to plot the sorted data by date (.sort_values())
- Visualise the data by hours using histogram with bins=24,range=(0.5,24)
- Visualise the data by weekday using histogram with bins=7,range = (-.5,6.5), rwidth=0.8
- Check the use of xticks and add 'Mon Tue Wed Thu Fri Sat Sun'.split()
 
**Performing Cross Analysis**
- Group the data by weekday and hour using .apply(count_rows).unstack()
- Create heatmap using seaborn.heatmap for the grouped data
- Analyse both Latitude and Longitude data represent the specific ranges for each respectively
- Example Latitude range =(40.5,41) and likewise set for Longitude
- Merge the two histograms Latitude and Longitude using twiny()
- Plot the dots for both Latitude and Longitude set the figsize=(20, 20)
 
**“By visualizing information, we turn it into a landscape that you can explore with your eyes. A sort of information map. And when you’re lost in information, an information map is kind of useful.”**